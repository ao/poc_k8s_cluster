version: '1.0'
stages:
  - prepare
  - build
  - deploy
steps:
  CreateMyPipelineContext:
    type: parallel
    steps:
      main_clone:
        title: "Cloning main repository"
        type: git-clone
        stage: prepare
        repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
        revision: '${{CF_REVISION}}'
        git: github
      AddDependencies:
        title: "Add the dependencies"
        stage: prepare
        image: pulumi/pulumi
        commands:
          - npm install
      ExportConfiguration:
        title: "Prepare the context of your pipeline"
        stage: prepare
        image: codefresh/cli
        commands:
          - cf_export AWS_ACCESS_KEY_ID=$(codefresh get context aws_personal_dev --output=json | jq -r '.spec.data.AWS_ACCESS_KEY_ID')
          - cf_export AWS_SECRET_ACCESS_KEY=$(codefresh get context aws_personal_dev --output=json | jq -r '.spec.data.AWS_SECRET_ACCESS_KEY')
          - cf_export PULUMI_ACCESS_TOKEN=$(codefresh get context pulumi_token_${{CF_REPO_NAME}} --output=json | jq -r '.spec.data.PULUMI_ACCESS_TOKEN')
          - echo $(codefresh get context pulumi_token_${{CF_REPO_NAME}} --output=json)
  DryRun:
    title: "Run a preview"
    stage: build
    image: pulumi/pulumi
    commands:
      - echo ${AWS_ACCESS_KEY_ID}
      - echo ${PULUMI_ACCESS_TOKEN}
      - pulumi preview --stack dev --non-interactive
  ApprovalRequest:
    title: "Ask for a validation or validate by default"
    stage: build
    type: pending-approval
    timeout:
      duration: 0.02 # 1min 12sec
      finalState: denied
  RunPulumi:
    title: Deploying
    stage: deploy
    image: pulumi/pulumi
    commands: 
      - pulumi stack select dev --non-interactive
      - pulumi stack --non-interactive
      - pulumi up --non-interactive
